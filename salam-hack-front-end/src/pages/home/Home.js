import React, { useState, useEffect, useContext } from "react";
import "./home.css";
import { useNavigate } from "react-router-dom";
import homeImage from "../../images/homeImage.webp";
import { useSelector } from "react-redux";
import getCoursesByKeywords from "./coursesData";
import getChannelsByKeywords from "./channelsData";
import { addUserPlaylist } from "../courses/coursesLogic";
import { appContext } from "../../global/contexts/appContext";
import { Link } from "react-router-dom";
export default function Home() {
  const user = useSelector((state) => state.currentUser);

  const [isLoggedIn, setIsLoggedIn] = useState(false);
  const [courses, setCourses] = useState([]);
  const [channels, setChannels] = useState([]);
  const navigate = useNavigate();
  const { setNotificationData, setLoader } = useContext(appContext);

  // Sample data from your JSON files

  useEffect(() => {
    setIsLoggedIn(user?.userId ? true : false);
  }, [user]);

  useEffect(() => {
    const userFields = user?.fields?.map((item) => item?.name) ?? [];
    if (!isLoggedIn) {
      setCourses(getCoursesByKeywords(["ุจุฑูุฌุฉ", "ุชุตููู", "ุชุณููู"]));
      setChannels(getChannelsByKeywords(["ุจุฑูุฌุฉ", "ุชุตููู", "ุชุณููู"]));
    } else {
      setCourses(getCoursesByKeywords(userFields));
      setChannels(getChannelsByKeywords(userFields));
    }
  }, [isLoggedIn]);

  // Your progress stats
  const stats = [
    { id: 1, title: "ุงูุฏูุฑุงุช ุงููุถุงูุฉ", value: 12, icon: "๐" }, // ุชุบููุฑ ุฃููููุฉ ุงูุฏูุฑุงุช ุงููุถุงูุฉ
    { id: 2, title: "ุงูุฏูุฑุงุช ุงูููุชููุฉ", value: 87, icon: "๐" }, // ุชุบููุฑ ุฃููููุฉ ุงูุฏูุฑุงุช ุงูููุชููุฉ
    { id: 3, title: "ุงููููุงุช ุงููุถุงูุฉ", value: 42, icon: "๐" }, // ุชุบููุฑ ุฃููููุฉ ุงููููุงุช ุงููุถุงูุฉ
    { id: 4, title: "ุงูููุงุญุธุงุช ุงููุถุงูุฉ", value: 24, icon: "๐ฌ" }, // ุชุบููุฑ ุฃููููุฉ ุงูููุงุญุธุงุช ุงููุถุงูุฉ
  ];

  const levelMapping = {
    easy: "ุณูู",
    mid: "ูุชูุณุท",
    hard: "ุตุนุจ",
  };

  async function handleNewCourse(playlistURL) {
    await addUserPlaylist(
      user?.userId,
      playlistURL,
      setLoader,
      setNotificationData
    );
  }

  return (
    <div className="home-container">
      {/* Hero Section */}
      <section className="hero-section">
        <div className="hero-content">
          <h1>ุชุนูู ุจุทุฑููุฉ ุฃุฐูู</h1>
          <p>ููุตุฉ ุชุนููููุฉ ูุจููุฉ ุนูู ุงูุฐูุงุก ุงูุงุตุทูุงุนู ููุณุงุนุฏุชู ูู ุฑุญูุฉ ุงูุชุนูู</p>
          <div className="hero-cta">
            {!isLoggedIn && (
              <button
                className="primary-button"
                onClick={() => {
                  navigate("/login");
                }}
              >
                ุชุณุฌูู ุงูุฏุฎูู
              </button>
            )}
            <a href="#courses">
              <button className="secondary-button">ุงุณุชูุดุงู ุงูุฏูุฑุงุช</button>
            </a>
          </div>
        </div>
        <div className="hero-image">
          <img src={homeImage} alt="ุชุนูู ุงูุจุฑูุฌุฉ" />
        </div>
      </section>

      {/* Stats Section */}
      <section className="stats-section">
        <div className="stats-container">
          {stats.map((stat) => (
            <div key={stat.id} className="stat-card">
              <div className="stat-icon">{stat.icon}</div>
              <h3 className="stat-value">{isLoggedIn ? stat.value : "0"}</h3>
              <p className="stat-title">{stat.title}</p>
            </div>
          ))}
        </div>
      </section>

      {/* Featured Courses */}
      <section id="courses" className="section">
        <div className="section-header">
          <h2 className="section-title">ุฏูุฑุงุช ููุชุฑุญุฉ</h2>
        </div>

        <div className="courses-grid">
          {courses.map((category, categoryIndex) =>
            category?.map((course, courseIndex) => (
              <div
                key={`${categoryIndex}-${courseIndex}`}
                className="course-card"
              >
                <div className="course-thumbnail">
                  <img
                    src={course?.image_url}
                    alt={course?.title}
                    loading="lazy"
                  />
                  <div className="course-overlay">
                    {isLoggedIn ? (
                      <button
                        onClick={async () => {
                          await handleNewCourse(course?.playlist_url);
                        }}
                        className="add-to-library"
                      >
                        <i className="fas fa-plus-circle"></i> ุฅุถุงูุฉ ุฅูู ุฏูุฑุงุชู
                      </button>
                    ) : (
                      <button
                        className="login-button"
                        onClick={() => {
                          navigate("/login");
                        }}
                      >
                        <i className="fas fa-sign-in-alt"></i> ุชุณุฌูู ุงูุฏุฎูู
                      </button>
                    )}
                  </div>
                </div>
                <div className="course-info">
                  <h3 className="course-title">{course?.title}</h3>
                  <div className="course-meta">
                    <div className="course-meta-item">
                      <i className="fas fa-book"></i>
                      <span>{course?.lessons_count} ุฏุฑุณ</span>
                    </div>
                    <div className="course-meta-item">
                      <i className="fas fa-signal"></i>
                      <span>{levelMapping[course?.level] || "ุบูุฑ ูุญุฏุฏ"}</span>
                    </div>
                  </div>
                  <a
                    href={course.playlist_url}
                    className="course-playlist"
                    target="_blank"
                    rel="noopener noreferrer"
                  >
                    <i className="fab fa-youtube"></i> ูุดุงูุฏุฉ ุนูู ููุชููุจ
                  </a>
                </div>
              </div>
            ))
          )}
        </div>
      </section>

      {/* My Learning Section */}
      <section className="section">
        <div className="section-header">
          <h2 className="section-title">ุชุนููู ุงูุญุงูู</h2>
          {isLoggedIn && (
            <Link to="/courses" className="view-all">
              ุนุฑุถ ุงููู
            </Link>
          )}
        </div>

        <div className="my-learning-container">
          {isLoggedIn ? (
            <>
              <div className="current-course">
                <img
                  src={courses[0].imageURL}
                  alt={courses[0].name}
                  className="course-thumbnail"
                />
                <div className="course-info">
                  <h3 className="course-title">{courses[0].name}</h3>
                  <div className="progress-container">
                    <div className="progress-bar">
                      <div className="progress" style={{ width: "45%" }}></div>
                    </div>
                    <span className="progress-text">45% ููุชูู</span>
                  </div>
                  <button
                    className="continue-button"
                    onClick={() => {
                      navigate("/courses");
                    }}
                  >
                    ุงุณุชุฆูุงู ุงูุชุนูู
                  </button>
                </div>
              </div>

              <div className="learning-stats">
                <div className="stat-box">
                  <h4>7</h4>
                  <p>ุฏุฑูุณ ูุชุจููุฉ</p>
                </div>
                <div className="stat-box">
                  <h4>12</h4>
                  <p>ุฏุฑูุณ ููุชููุฉ</p>
                </div>
                <div className="stat-box">
                  <h4>2.5</h4>
                  <p>ุณุงุนุงุช</p>
                </div>
              </div>
            </>
          ) : (
            <div className="no-learning-yet">
              <h3>
                ูู ุชุจุงุดุฑ ุจุนุฏ{" "}
                <Link to={"/registration"} className="start-learning">
                  ุงุจุฏุฃ ุฃูุงู
                </Link>
              </h3>
            </div>
          )}
        </div>
      </section>

      {/* Recommended Channels */}
      <section className="section">
        <div className="section-header">
          <h2 className="section-title">ูููุงุช ููุชุฑุญุฉ</h2>
        </div>

        <div className="channels-grid">
          {channels?.length > 0 ? (
            channels.map((channel) => (
              <a
                href={channel?.channelURL}
                className="channel-card"
                key={channel?.channelURL}
                target="_blank"
                rel="noopener noreferrer"
              >
                <img
                  src={channel?.channelImageURL}
                  alt={channel?.name}
                  className="channel-image"
                  loading="lazy"
                />
                <h3 className="channel-name">{channel?.name}</h3>
                <p className="channel-info">ููุงุฉ ุชุนููููุฉ</p>
                <button className="follow-button">ูุชุงุจุนุฉ</button>
              </a>
            ))
          ) : (
            <p className="no-channels">ูุง ุชูุฌุฏ ูููุงุช ูุชุงุญุฉ</p>
          )}
        </div>
      </section>

      {/* Features */}
      <div className="features-container">
        <div className="feature-item">
          <span className="feature-icon">๐ฌ</span>
          <h3 className="feature-title">ุฅุถุงูุฉ ููุงุฆู ุชุดุบูู ูู ุงูููุชููุจ</h3>
          <p className="feature-description">
            ุฏูุฌ ููุงุฆู ุชุดุบูู ุงูููุชููุจ ูุชุณููู ูุชุงุจุนุฉ ุงูุฏูุฑุงุช ุงูุชุนููููุฉ
          </p>
        </div>

        <div className="feature-item">
          <span className="feature-icon">๐ค</span>
          <h3 className="feature-title">ูุณุงุนุฏ ุฐูู</h3>
          <p className="feature-description">
            ุฏุนู ุชุนูููู ูุชูุฏู ุจุงุณุชุฎุฏุงู ุชูููุงุช ุงูุฐูุงุก ุงูุงุตุทูุงุนู ูุน ุตูุญุฉ ุฏุฑุฏุดุฉ
            ุชูุงุนููุฉ
          </p>
        </div>

        <div className="feature-item">
          <span className="feature-icon">๐</span>
          <h3 className="feature-title">ุฅุถุงูุฉ ููุงุญุธุงุช</h3>
          <p className="feature-description">
            ุชุฏููู ููุงุญุธุงุช ุฎุงุตุฉ ุจูู ุฏุฑุณ ูุน ุฅููุงููุฉ ุชูุธูููุง ูุชูุณูููุง
          </p>
        </div>

        <div className="feature-item">
          <span className="feature-icon">๐</span>
          <h3 className="feature-title">ุฅุถุงูุฉ ูููุงุช</h3>
          <p className="feature-description">
            ุฅุฑูุงู ูููุงุช PDF ูููุงุฑุฏ ุชุนููููุฉ ูุชููุนุฉ ูุชุนุฒูุฒ ุงููุญุชูู
          </p>
        </div>

        <div className="feature-item">
          <span className="feature-icon">๐</span>
          <h3 className="feature-title">ุงูุชุญุงูุงุช ููู ุฏุฑุณ</h3>
          <p className="feature-description">
            ุงุฎุชุจุงุฑุงุช ูุตูุฑุฉ ุจุนุฏ ูู ุฏุฑุณ ูููุงุณ ูุฏู ุงุณุชูุนุงุจ ุงููุนูููุงุช
          </p>
        </div>

        <div className="feature-item">
          <span className="feature-icon">๐ฏ</span>
          <h3 className="feature-title">ุงูุชุญุงูุงุช ุดุงููุฉ</h3>
          <p className="feature-description">
            ุชูููู ุดุงูู ุนูู ูุณุชูู ูู ุฏูุฑุฉ ูุชุนุฒูุฒ ุงูุชุนูู ูููุงุณ ุงูููุงุฑุงุช ุงูููุชุณุจุฉ
          </p>
        </div>
      </div>

      {/* Call to Action */}
      <section className="cta-section">
        <div className="cta-content">
          <h2>ุงุจุฏุฃ ุฑุญูุฉ ุงูุชุนูู ุงูุขู</h2>
          <p>ูู ุจุฅุถุงูุฉ ููุงุฆู ุงูุชุดุบูู ุงูุฎุงุตุฉ ุจู ูุงุณุชูุฏ ูู ูููุฒุงุช ุงูููุตุฉ</p>
          {isLoggedIn ? (
            <button
              className="primary-button"
              onClick={() => {
                navigate("/courses");
              }}
            >
              ุฅุถุงูุฉ ูุงุฆูุฉ ุชุดุบูู
            </button>
          ) : (
            <button
              className="primary-button"
              onClick={() => {
                navigate("/registration");
              }}
            >
              ุณุฌู ุงูุงู
            </button>
          )}
        </div>
      </section>
    </div>
  );
}
